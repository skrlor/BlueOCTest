{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\react-redux-posts-app\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts } from '../features/posts/postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const state = use;\n\n  // Access the posts state\n  const posts = useSelector(state => state.posts.posts); // Access state.posts and then .posts\n  const status = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n\n  // Fetch posts on initial render\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [status, dispatch]);\n  console.log('Redux state:', useSelector(state => state));\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 36\n  }, this);\n  if (status === 'failed') return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"5WI9QgCNiWYanKsMuwlMlKNcDT4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchPosts","jsxDEV","_jsxDEV","PostList","_s","state","use","posts","status","error","dispatch","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","body","id","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/react-redux-posts-app/src/components/PostList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchPosts } from '../features/posts/postsSlice';\r\n\r\nconst PostList = () => {\r\n  const state = use;\r\n\r\n  // Access the posts state\r\n  const posts = useSelector((state) => state.posts.posts); // Access state.posts and then .posts\r\n  const status = useSelector((state) => state.posts.status);\r\n  const error = useSelector((state) => state.posts.error);\r\n\r\n  // Fetch posts on initial render\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchPosts());\r\n    }\r\n  }, [status, dispatch]);\r\n\r\n  console.log('Redux state:', useSelector((state) => state));\r\n\r\n\r\n  if (status === 'loading') return <p>Loading...</p>;\r\n  if (status === 'failed') return <p>Error: {error}</p>;\r\n\r\n  \r\n  return (\r\n    <ul>\r\n      {posts.map((post) => (\r\n        <li key={post.id}>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.body}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PostList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGC,GAAG;;EAEjB;EACA,MAAMC,KAAK,GAAGT,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;EACzD,MAAMC,MAAM,GAAGV,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACE,KAAK,CAACC,MAAM,CAAC;EACzD,MAAMC,KAAK,GAAGX,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACE,KAAK,CAACE,KAAK,CAAC;;EAEvD;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,KAAK,MAAM,EAAE;MACrBE,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACQ,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEd,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAAC,CAAC;EAG1D,IAAIG,MAAM,KAAK,SAAS,EAAE,oBAAON,OAAA;IAAAW,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAClD,IAAIT,MAAM,KAAK,QAAQ,EAAE,oBAAON,OAAA;IAAAW,QAAA,GAAG,SAAO,EAACJ,KAAK;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAGrD,oBACEf,OAAA;IAAAW,QAAA,EACGN,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdjB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAKM,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBf,OAAA;QAAAW,QAAA,EAAIM,IAAI,CAACE;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFXE,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACb,EAAA,CAhCID,QAAQ;EAAA,QAIEL,WAAW,EACVA,WAAW,EACZA,WAAW,EASGA,WAAW;AAAA;AAAAyB,EAAA,GAfnCpB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}