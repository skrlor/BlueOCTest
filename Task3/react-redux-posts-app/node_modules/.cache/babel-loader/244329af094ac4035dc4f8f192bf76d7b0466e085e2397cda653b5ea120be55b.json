{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk to fetch posts\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n  return response.data;\n});\n\n// Create slice\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: [],\n    // Array to store posts\n    status: 'idle',\n    // 'idle' | 'loading' | 'succeeded' | 'failed'\n    error: null // Error messages\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload; // Save the posts\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Export reducer\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPosts","response","get","data","postsSlice","name","initialState","posts","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/ADMIN/react-redux-posts-app/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunk to fetch posts\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\r\n  const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n  return response.data;\r\n});\r\n\r\n// Create slice\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [], // Array to store posts\r\n    status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed'\r\n    error: null, // Error messages\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.posts = action.payload; // Save the posts\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\n// Export reducer\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,4CAA4C,CAAC;EAC9E,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IAAE;IACXC,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE,IAAI,CAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACb,UAAU,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC,CACDL,OAAO,CAACb,UAAU,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA,eAAehB,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}